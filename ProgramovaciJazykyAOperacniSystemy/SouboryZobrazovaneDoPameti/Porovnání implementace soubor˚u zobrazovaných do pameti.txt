Soubory zobrazované do paměti (memory-mapped files, mmap) umožňují, aby byl obsah souboru přímo zpřístupněn v adresním prostoru procesu. Proces pak se souborem pracuje tak, jako by to byl běžný kus paměti – čtení a zápis probíhá pomocí přístupu k adresám. Stránky se načítají z disku do RAM až při přístupu (page fault). Změny mohou být sdílené (MAP_SHARED) a zapisovány zpět do souboru, nebo soukromé (MAP_PRIVATE) pomocí copy-on-write. Výhodou je efektivní práce se soubory, možnost sdílení mezi procesy a úspora paměti díky odstranění zbytečných kopií.

Stránkování a odkládací soubor (swap) je naopak mechanismus, který rozšiřuje fyzickou paměť RAM. Pokud není v RAM dost místa, jádro může anonymní stránky procesu (tedy nepocházející ze souborů) odložit do speciálního swapovacího prostoru na disku. Při dalším přístupu dojde k vyvolání page fault a stránka se načte zpět do RAM. Tento mechanismus je transparentní pro proces, ale je výrazně pomalejší, protože disk je mnohem pomalejší než RAM.

Hlavní rozdíl je tedy v tom, že při mmap je virtuální paměť navázána na skutečný soubor v souborovém systému, zatímco u swapu je paměť navázána na anonymní swapovací prostor. mmap se využívá hlavně pro efektivní práci se soubory, sdílení paměti a IPC, zatímco swap slouží primárně k tomu, aby bylo možné spouštět více procesů, než kolik by se vešlo do fyzické paměti RAM.